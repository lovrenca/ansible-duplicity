#!/bin/bash

################################################################################
#                                                                              #
#                                 {o,o}                                        #
#                                 |)__)                                        #
#                                 -"-"-                                        #
#                                                                              #
################################################################################
#
#This script dumps the database from a postgresql docker container
#to the destonation file.
#
##############################---INCLUDES---####################################

. "${BACKUP_BACKEND}.cf"
. ./runDuplicity

################################################################################

##############################---VARIABLES---###################################

: ${DBUSER:="postgres"}
: ${DBHOST:="localhost"}
: ${DATABASE:="gitlabhq_production"}

#Mising variables are included from backupConfig
SOURCE_DIRECTORY="${BACKUPDIR}/${BACKUP_NAME}"
DESTINATION="${SOURCE_DIRECTORY}/${DATABASE}.sql"

################################################################################

##############################---FUNCTIONS---###################################

function connectAndDump() {
    if  [ -e ${SOURCE_DIRECTORY} ]
    then
        rm -fr ${SOURCE_DIRECTORY}
    fi

    mkdir -p ${SOURCE_DIRECTORY}
    docker exec "${CONTAINER}" bash -c \
            "su -c '/opt/gitlab/embedded/bin/pg_dump --port 5432 -h /var/opt/gitlab/postgresql -d ${DATABASE}' ${DBUSER}" > ${DESTINATION}
}

function runBackup() {
    connectAndDump
    runDuplicity
    removeOldBackups
}

################################################################################
