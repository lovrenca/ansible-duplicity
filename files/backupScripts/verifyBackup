#!/bin/bash

################################################################################
#                                                                              #
#                                 {o,o}                                        #
#                                 |)__)                                        #
#                                 -"-"-                                        #
#                                                                              #
################################################################################
#
# Looks at backup configs and checks if there are fresh backups present.
#
##############################---VARIABLES---###################################

BACKUP_STATUS=0

################################################################################

###############################---WORKDIR---####################################

cd $( dirname $0 )

################################################################################

##############################---INCLUDES---####################################

. ./backupConfig

################################################################################

##############################---FUNCTIONS---###################################

function chackForBackup() {
  for backup in *.conf
  do
    . "./${backup}"

    # Check connection to backup server
    if ! $(ssh ${USERNAME}@${SERVER} true  2>/dev/null)
    then
      echo " WARNING: Unable to connect to server ${SERVER} to verify backup!"
      exit 1
    fi

    # Check if backup directory exists
    if ! $(ssh ${USERNAME}@${SERVER} "cd ${BACKUP_NAME}" 2>/dev/null)
    then
      echo " ERROR: Backup directory does not exist ${SERVER}/${BACKUP_NAME}!"
      BACKUP_STATUS=2
    # Check if new backup exists
  elif [[ -n $(ssh ${USERNAME}@${SERVER} "find ${BACKUP_NAME} -mtime 0") ]]
    then
      echo " INFO: Backup for ${BACKUP_NAME}@${SERVER} OK." >>/dev/null
    else
      echo " ERROR: Backup for ${BACKUP_NAME}@${SERVER} NOT found!"
      BACKUP_STATUS=2
    fi
  done
  exit ${BACKUP_STATUS}
}

################################################################################

###############################---EXECUTION---##################################

chackForBackup

################################################################################
